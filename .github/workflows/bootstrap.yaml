name: Terraform S3 Bootstrap

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment (dev, staging, prod)'
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod
      region:
        description: 'AWS Region like eu-west-2'
        required: true
        default: 'eu-west-2'

jobs:
  terraform-bootstrap:
    name: Bootstrap Terraform Backend
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    env:
      TF_VAR_environment: ${{ github.event.inputs.environment }}
      TF_ENV_FILE: "${{ github.event.inputs.environment }}.tfvars"
      TF_DIR: bootstrap

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.region }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.2

      - name: Terraform Init
        run: terraform -chdir=${{ env.TF_DIR }} init

      - name: Terraform Validate
        run: terraform -chdir=${{ env.TF_DIR }} validate

      - name: Terraform Plan
        run: terraform -chdir=${{ env.TF_DIR }} plan -var-file=${{ env.TF_ENV_FILE }}

      - name: Wait for Approval Before Apply
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: ${{ github.actor }}
          minimum-approvals: 1
          issue-title: "Terraform Apply Approval - ${{ github.event.inputs.environment }}"
          issue-body: "Approve to apply Terraform for **${{ github.event.inputs.environment }}** environment."
          exclude-workflow-initiator-as-approver: false

      - name: Terraform Apply
        run: terraform -chdir=${{ env.TF_DIR }} apply -var-file=${{ env.TF_ENV_FILE }} -auto-approve
